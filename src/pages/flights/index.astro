---
import Layout from '../../layouts/Layout.astro';
import PostRow from '../../components/PostRow.astro';
import { getCollection } from 'astro:content';
const flights = (await getCollection('flights')).sort(
    (a, b) => b.data.departure.date.valueOf() - a.data.departure.date.valueOf()
);

// Group flights by year
const flightsByYear = flights.reduce((acc, flight) => {
  const year = flight.data.departure.date.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(flight);
  return acc;
}, {} as Record<number, typeof flights>);

// Sort years in descending order
const sortedYears = Object.keys(flightsByYear).sort((a, b) => Number(b) - Number(a));

// Type assertion to help TypeScript understand the year type
type Year = keyof typeof flightsByYear;
---
<Layout title="Flights">
  <h1>Flights</h1>
  <div class="content-container">
    {sortedYears.map(year => (
      <div class="year-section">
        <h2>{year}</h2>
        <div class="flights-grid">
          {flightsByYear[year].map(flight => (
            <PostRow
              href={`/flights/${flight.id}`},
              title={flight.data.flightNumber},
              description={`${flight.data.departure.airportCode} â†’ ${flight.data.arrival.airportCode}`},
              date={flight.data.departure.date},
              inline={true}
            />
          ))}
        </div>
      </div>
    ))}
  </div>
</Layout>

<style>

  .year-section {
    margin: 2rem 0;
  }

  .year-section h2 {
    text-align: left;
  }

</style>